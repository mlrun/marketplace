kind: job
metadata:
  name: structured-data-generator
  tag: ''
  hash: 775c1a59adea52f5a1a4d26c96925c88474015f3
  project: ''
  labels:
    author: zeevr
  categories:
  - machine-learning
  - data-preparation
  - Data Generation
  - GenAI
spec:
  command: ''
  args: []
  image: ''
  build:
    functionSourceCode: IyBDb3B5cmlnaHQgMjAyMyBJZ3VhemlvCiMKIyBMaWNlbnNlZCB1bmRlciB0aGUgQXBhY2hlIExpY2Vuc2UsIFZlcnNpb24gMi4wICh0aGUgIkxpY2Vuc2UiKTsKIyB5b3UgbWF5IG5vdCB1c2UgdGhpcyBmaWxlIGV4Y2VwdCBpbiBjb21wbGlhbmNlIHdpdGggdGhlIExpY2Vuc2UuCiMgWW91IG1heSBvYnRhaW4gYSBjb3B5IG9mIHRoZSBMaWNlbnNlIGF0CiMKIyAgIGh0dHA6Ly93d3cuYXBhY2hlLm9yZy9saWNlbnNlcy9MSUNFTlNFLTIuMAojCiMgVW5sZXNzIHJlcXVpcmVkIGJ5IGFwcGxpY2FibGUgbGF3IG9yIGFncmVlZCB0byBpbiB3cml0aW5nLCBzb2Z0d2FyZQojIGRpc3RyaWJ1dGVkIHVuZGVyIHRoZSBMaWNlbnNlIGlzIGRpc3RyaWJ1dGVkIG9uIGFuICJBUyBJUyIgQkFTSVMsCiMgV0lUSE9VVCBXQVJSQU5USUVTIE9SIENPTkRJVElPTlMgT0YgQU5ZIEtJTkQsIGVpdGhlciBleHByZXNzIG9yIGltcGxpZWQuCiMgU2VlIHRoZSBMaWNlbnNlIGZvciB0aGUgc3BlY2lmaWMgbGFuZ3VhZ2UgZ292ZXJuaW5nIHBlcm1pc3Npb25zIGFuZAojIGxpbWl0YXRpb25zIHVuZGVyIHRoZSBMaWNlbnNlLgppbXBvcnQgYXN0CmltcG9ydCBvcwoKaW1wb3J0IHRxZG0KZnJvbSBsYW5nY2hhaW4uY2hhdF9tb2RlbHMgaW1wb3J0IENoYXRPcGVuQUkKCgpkZWYgX3NldF9vcGVuYWlfc2VjcmV0cygpIC0+IGJvb2w6CiAgICBrZXkgPSAiT1BFTkFJX0FQSV9LRVkiCiAgICBiYXNlID0gIk9QRU5BSV9BUElfQkFTRSIKICAgICMgQ2hlY2sgaWYgdGhlIGtleSBpcyBhbHJlYWR5IGluIHRoZSBlbnZpcm9ubWVudCB2YXJpYWJsZXM6CiAgICBpZiBrZXkgaW4gb3MuZW52aXJvbiBhbmQgYmFzZSBpbiBvcy5lbnZpcm9uOgogICAgICAgIHJldHVybiBUcnVlCiAgICAjIENoZWNrIGlmIG1scnVuIGlzIGluc3RhbGxlZDoKICAgIHRyeToKICAgICAgICBpbXBvcnQgbWxydW4KICAgIGV4Y2VwdCBNb2R1bGVOb3RGb3VuZEVycm9yOgogICAgICAgIHJhaXNlIEVudmlyb25tZW50RXJyb3IoCiAgICAgICAgICAgIGYiT25lIG9yIG1vcmUgb2YgdGhlIE9wZW5BSSByZXF1aXJlZCBlbnZpcm9ubWVudCB2YXJpYWJsZXMgKCd7a2V5fScsICd7YmFzZX0nKSBhcmUgbWlzc2luZy4iCiAgICAgICAgICAgIGYiUGxlYXNlIHNldCB0aGVtIGFzIGVudmlyb25tZW50IHZhcmlhYmxlcyBvciBpbnN0YWxsIG1scnVuIChgcGlwIGluc3RhbGwgbWxydW5gKSIKICAgICAgICAgICAgZiJhbmQgc2V0IHRoZW0gYXMgcHJvamVjdCBzZWNyZXRzIHVzaW5nIGBwcm9qZWN5LnNldF9zZWNyZXRzYC4iCiAgICAgICAgKQoKICAgICMgQ2hlY2sgaWYgdGhlIGtleSBpcyBpbiB0aGUgc2VjcmV0czoKICAgIGNvbnRleHQgPSBtbHJ1bi5nZXRfb3JfY3JlYXRlX2NvbnRleHQobmFtZT0iY29udGV4dCIpCiAgICBvcGVuYWlfa2V5ID0gY29udGV4dC5nZXRfc2VjcmV0KGtleSwgTm9uZSkKICAgIG9wZW5haV9iYXNlID0gY29udGV4dC5nZXRfc2VjcmV0KGJhc2UsIE5vbmUpCgogICAgIyBJZiB0aGUga2V5IGlzIG5vdCBpbiB0aGUgc2VjcmV0cywgcmV0dXJuIEZhbHNlOgogICAgaWYgbm90IG9wZW5haV9rZXk6CiAgICAgICAgcmFpc2UgRW52aXJvbm1lbnRFcnJvcigKICAgICAgICAgICAgZiJDb3VsZCBub3QgZmluZCBPcGVuQUkgQVBJIGtleSBpbiB0aGUgZW52aXJvbm1lbnQgdmFyaWFibGVzIG9yIHNlY3JldHMsIgogICAgICAgICAgICBmIiBwbGVhc2Ugc2V0IGl0IGFzOiB7a2V5fS4iCiAgICAgICAgKQogICAgaWYgbm90IG9wZW5haV9iYXNlOgogICAgICAgIHJhaXNlIEVudmlyb25tZW50RXJyb3IoCiAgICAgICAgICAgIGYiQ291bGQgbm90IGZpbmQgT3BlbkFJIEFQSSBiYXNlIGluIHRoZSBlbnZpcm9ubWVudCB2YXJpYWJsZXMgb3Igc2VjcmV0cywiCiAgICAgICAgICAgIGYiIHBsZWFzZSBzZXQgaXQgYXM6IHtiYXNlfS4iCiAgICAgICAgKQogICAgIyBJZiB0aGUga2V5IGlzIGluIHRoZSBzZWNyZXRzLCBzZXQgaXQgaW4gdGhlIGVudmlyb25tZW50IHZhcmlhYmxlcyBhbmQgcmV0dXJuIFRydWU6CiAgICBvcy5lbnZpcm9uW2tleV0gPSBvcGVuYWlfa2V5CiAgICBvcy5lbnZpcm9uW2Jhc2VdID0gb3BlbmFpX2Jhc2UKICAgIHJldHVybiBUcnVlCgoKZGVmIGdlbmVyYXRlX2RhdGEoCiAgICBmaWVsZHM6IGxpc3QsCiAgICBhbW91bnQ6IGludCA9IDEwLAogICAgbW9kZWxfbmFtZTogc3RyID0gImdwdC0zLjUtdHVyYm8iLAogICAgbGFuZ3VhZ2U6IHN0ciA9ICJlbiIsCiAgICBjaHVua19zaXplOiBpbnQgPSA1MCwKKSAtPiBsaXN0OgogICAgIiIiCiAgICBTdHJ1Y3R1cmVkIGRhdGEgb2YgZWxlbWVudHMgYWNjb3JkaW5nIHRvIHRoZSBnaXZlbiBwYXJhbWV0ZXJzLgogICAgVGhlIGRhdGEgY2FuIGJlIGxhdGVyIGxvZ2dlZCBhcyBhIHN0cnVjdHVyZWQgZmlsZSB3aXRoIE1MUnVuJ3MgYHJldHVybnNgIHBhcmFtZXRlci4KCiAgICA6cGFyYW0gZmllbGRzOiBBIGxpc3Qgb2YgZmllbGRzIHRvIHJhbmRvbWx5IGdlbmVyYXRlLgogICAgOnBhcmFtIGFtb3VudDogVGhlIG51bWJlciBvZiB2YXJpYW50cyB0byBnZW5lcmF0ZS4KICAgIDpwYXJhbSBtb2RlbF9uYW1lOiBUaGUgbmFtZSBvZiB0aGUgbW9kZWwgdG8gdXNlIGZvciBjb252ZXJzYXRpb24gZ2VuZXJhdGlvbi4KICAgICAgICAgICAgICAgICAgICAgICBZb3Ugc2hvdWxkIGNob29zZSBvbmUgb2YgR1BULTQgb3IgR1BULTMuNSBmcm9tIHRoZSBsaXN0IGhlcmU6IGh0dHBzOi8vcGxhdGZvcm0ub3BlbmFpLmNvbS9kb2NzL21vZGVscy4KICAgICAgICAgICAgICAgICAgICAgICBEZWZhdWx0OiAnZ3B0LTMuNS10dXJibycuCiAgICA6cGFyYW0gbGFuZ3VhZ2U6IFRoZSBsYW5ndWFnZSB0byB1c2UgZm9yIHRoZSBnZW5lcmF0ZWQgY29udmVyc2F0aW9uIHRleHQuCiAgICA6cGFyYW0gY2h1bmtfc2l6ZTogTnVtYmVyIG9mIHNhbXBsZXMgZ2VuZXJhdGVkIGF0IGVhY2ggR1BUIHF1ZXJ5LgogICAgIiIiCiAgICBpbnN0cnVjdGlvbnMgPSAiIgogICAgZm9yIGZpZWxkIGluIGZpZWxkczoKICAgICAgICAjIFNwbGl0IHRoZSBmaWVsZCB0byBrZXkgYW5kIGluc3RydWN0aW9uOgogICAgICAgIGlmICI6IiBpbiBmaWVsZDoKICAgICAgICAgICAga2V5LCBpbnN0cnVjdGlvbiA9IGZpZWxkLnNwbGl0KCI6IiwgMSkKICAgICAgICBlbHNlOgogICAgICAgICAgICBrZXksIGluc3RydWN0aW9uID0gZmllbGQsICJubyBzcGVjaWFsIGluc3RydWN0aW9uIgogICAgICAgICMgUmVwbGFjZSBzcGFjZXMgd2l0aCB1bmRlcnNjb3JlcyBmb3IgdGhlIGtleSB0byBiZSB1c2VkIGFzIGEganNvbiBrZXk6CiAgICAgICAga2V5ID0ga2V5LnJlcGxhY2UoIiAiLCAiXyIpCiAgICAgICAgaW5zdHJ1Y3Rpb25zICs9IGYiKiB7a2V5fToge2luc3RydWN0aW9ufVxuIgoKICAgICMgQ3JlYXRlIHRoZSBwcm9tcHQgc3RydWN0dXJlOgogICAgcHJvbXB0X3N0cnVjdHVyZSA9ICgKICAgICAgICBmImdlbmVyYXRlIHRoZSBmb2xsb3dpbmcgdmFsdWVzIHthbW91bnR9IHRpbWVzIHJhbmRvbWx5LCBpbiBhbiBvcmRlciB0aGF0IGNyZWF0ZXMgYSBqc29uIHRhYmxlLlxuIgogICAgICAgIGYiVXNlIHRoZSBmb2xsb3dpbmcga2V5cyBhbmQgaW5zdHJ1Y3Rpb25zIChleGFtcGxlOiAna2V5OiBpbnN0cnVjdGlvbiBvciBubyBzcGVjaWFsIGluc3RydWN0aW9uJyk6ICIKICAgICAgICBmIntpbnN0cnVjdGlvbnN9LlxuIgogICAgICAgIGYiUGxlYXNlIGdlbmVyYXRlIHRoZSB2YWx1ZXMgaW4ge2xhbmd1YWdlfSBsYW5ndWFnZS4gXG4iCiAgICAgICAgZiJNYWtlIHN1cmUgdGhlIG5hbWVzIG9mIHRoZSBrZXlzIGFyZSB0aGUgc2FtZSBhcyB0aGUgZ2l2ZW4gZmllbGQgbmFtZS5cbiIKICAgICAgICBmIlBsZWFzZSByZXR1cm4gb25seSB0aGUganNvbiBmb3JtYXQgd2l0aG91dCBhbnkgaW50cm9kdWN0aW9uIGFuZCBlbmRpbmciCiAgICApCgogICAgIyBTZXQgdGhlIE9wZW5BSSBzZWNyZXRzOgogICAgX3NldF9vcGVuYWlfc2VjcmV0cygpCgogICAgIyBMb2FkIHRoZSBPcGVuQUkgbW9kZWwgdXNpbmcgbGFuZ2NoYWluOgogICAgbGxtID0gQ2hhdE9wZW5BSShtb2RlbD1tb2RlbF9uYW1lKQoKICAgICMgU3RhcnQgZ2VuZXJhdGluZyBkYXRhOgogICAgZGF0YSA9IFtdCiAgICBmb3IgXyBpbiB0cWRtLnRxZG0ocmFuZ2UoKGFtb3VudCAvLyBjaHVua19zaXplKSArIDEpLCBkZXNjPSJHZW5lcmF0aW5nIik6CiAgICAgICAgIyBXZSB0cnkgdG8gZ2VuZXJhdGUgdGhlIGRhdGEgMyB0aW1lcywgaWYgd2UgZmFpbCB3ZSByYWlzZSBhbiBlcnJvcjoKICAgICAgICBmb3IgdHJ5b3V0IGluIHJhbmdlKDMpOgogICAgICAgICAgICAjIElmIHRoZSBhbW91bnQgd2FudGVkIGlzIGJpZ2dlciB0aGFuIHRoZSBjaHVuayBzaXplLCB3ZSBnZW5lcmF0ZSBhIGNodW5rIG9mIGRhdGEgaW4gdGhlIHNpemUgb2YgdGhlIGNodW5rCiAgICAgICAgICAgICMgYW5kIGRlY3JlYXNlIHRoZSBhbW91bnQgYnkgdGhlIGNodW5rIHNpemUuCiAgICAgICAgICAgICMgb3RoZXJ3aXNlIHdlIGdlbmVyYXRlIGEgY2h1bmsgb2YgZGF0YSBpbiB0aGUgc2l6ZSBvZiB0aGUgYW1vdW50OgogICAgICAgICAgICBpZiBhbW91bnQgPiBjaHVua19zaXplOgogICAgICAgICAgICAgICAgY3VycmVudF9jaHVua19zaXplID0gY2h1bmtfc2l6ZQogICAgICAgICAgICAgICAgYW1vdW50IC09IGNodW5rX3NpemUKICAgICAgICAgICAgZWxzZToKICAgICAgICAgICAgICAgIGN1cnJlbnRfY2h1bmtfc2l6ZSA9IGFtb3VudAoKICAgICAgICAgICAgIyBDcmVhdGUgdGhlIHByb21wdDoKICAgICAgICAgICAgcHJvbXB0ID0gcHJvbXB0X3N0cnVjdHVyZS5mb3JtYXQoCiAgICAgICAgICAgICAgICBhbW91bnQ9Y3VycmVudF9jaHVua19zaXplLAogICAgICAgICAgICApCgogICAgICAgICAgICAjIEdlbmVyYXRlIGEgY2h1bmsgb2YgZGF0YToKICAgICAgICAgICAgY2h1bmtfZGF0YSA9IGxsbS5wcmVkaWN0KHRleHQ9cHJvbXB0KQoKICAgICAgICAgICAgIyBWYWxpZGF0ZSB0aGUgcmVzcG9uc2UgZm9yIGNvcnJlY3QgcHl0aG9uIGBsaXN0YCBzdHJ1Y3R1cmUKICAgICAgICAgICAgY2h1bmtfZGF0YSA9IGNodW5rX2RhdGFbY2h1bmtfZGF0YS5maW5kKCJbIikgOiBjaHVua19kYXRhLnJmaW5kKCJdIikgKyAxXQogICAgICAgICAgICBpZiBjaHVua19kYXRhLmNvdW50KCJbIikgIT0gY2h1bmtfZGF0YS5jb3VudCgiXSIpOgogICAgICAgICAgICAgICAgcHJpbnQoCiAgICAgICAgICAgICAgICAgICAgIkZhaWxlZCB0byBnZXQgcHJvcGVyIGpzb24gZm9ybWF0IGZyb20gbW9kZWwsIG51bWJlciBvZiAnWycgZG9lc24ndCBtYXRjaCBudW1iZXIgb2YgJ10nLiIKICAgICAgICAgICAgICAgICkKICAgICAgICAgICAgICAgIGNvbnRpbnVlCiAgICAgICAgICAgIGNodW5rX2RhdGEgPSBhc3QubGl0ZXJhbF9ldmFsKGNodW5rX2RhdGEpCiAgICAgICAgICAgIGRhdGEgKz0gY2h1bmtfZGF0YQogICAgICAgICAgICBicmVhawogICAgICAgIGlmIHRyeW91dCA9PSAzOgogICAgICAgICAgICByYWlzZSBSdW50aW1lRXJyb3IoCiAgICAgICAgICAgICAgICBmIkNvdWxkIG5vdCBnZW5lcmF0ZSBhIHByb3BlciBqc29uIGZvcm1hdCBmb3IgdGhlIGdpdmVuIGZpZWxkcywgdXNpbmcgZ2l2ZW4gbW9kZWw6IHttb2RlbF9uYW1lfS4iCiAgICAgICAgICAgICAgICBmIiBIaW50OiBHcHQtNCB3b3JrcyBiZXN0IGZvciBtb3N0IHNjZW5hcmlvcy4iCiAgICAgICAgICAgICkKICAgIHJldHVybiBkYXRhCg==
    base_image: mlrun/mlrun
    commands: []
    code_origin: ''
    origin_filename: ''
    requirements:
    - langchain
    - tqdm
  entry_points:
    generate_data:
      name: generate_data
      doc: 'Structured data of elements according to the given parameters.

        The data can be later logged as a structured file with MLRun''s `returns`
        parameter.'
      parameters:
      - name: fields
        type: list
        doc: A list of fields to randomly generate.
      - name: amount
        type: int
        doc: The number of variants to generate.
        default: 10
      - name: model_name
        type: str
        doc: 'The name of the model to use for conversation generation. You should
          choose one of GPT-4 or GPT-3.5 from the list here: https://platform.openai.com/docs/models.
          Default: ''gpt-3.5-turbo''.'
        default: gpt-3.5-turbo
      - name: language
        type: str
        doc: The language to use for the generated conversation text.
        default: en
      - name: chunk_size
        type: int
        doc: Number of samples generated at each GPT query.
        default: 50
      outputs:
      - type: list
      lineno: 59
      has_varargs: false
      has_kwargs: false
  description: GenAI approach of generating structured data according to a given schema
  default_handler: generate_data
  disable_auto_mount: false
  clone_target_dir: ''
  env: []
  priority_class_name: ''
  preemption_mode: prevent
  affinity: null
  tolerations: null
  security_context: {}
verbose: false
